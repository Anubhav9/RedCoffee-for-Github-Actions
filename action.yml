name: RedCoffee for Github Actions
description: Effortlessly generate insightful SonarQube PDF Reports within your Github Actions Workflow
author: Anubhav Sanyal
branding:
  icon: filter
  color: red
runs:
  using: composite
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Create Docker Network
      run: docker network create redcoffee-network
      shell: bash
    - name: Create Postgres DB container to store analysis record
      run: docker run -d -p 5432:5432 -e POSTGRES_USER=root -e POSTGRES_PASSWORD=password123 -e POSTGRES_DB=sonarreports --name=redcoffee-db --network=redcoffee-network postgres:latest
      shell: bash
    - name: Create the SonarQube container
      run: docker run -d -p 9000:9000 -e SONAR_JDBC_URL=jdbc:postgresql://redcoffee-db:5432/sonarreports -e SONAR_JDBC_USERNAME=root -e SONAR_JDBC_PASSWORD=password123 --memory="2g" --name=redcoffee-sonarqube --network=redcoffee-network sonarqube:community
      shell: bash
    - name: Health Check for SonarQube
      run: |
          echo "Waiting for SonarQube to be ready..."
          until curl -s "http://localhost:9000/api/system/status" | grep -q '"status":"UP"'; do
            sleep 10
          done
          echo "SonarQube is up and running!"
      shell: bash
    - name: Force Password change for first time login
      run: curl -X POST "http://localhost:9000/api/users/change_password" -u "admin:admin" -H "Content-Type:application/x-www-form-urlencoded" -d "login=admin&previousPassword=admin&password=HelloSonarqube9#"
      shell: bash
    - name: Generate SonarQube User Token
      run: |
          SONARQUBE_TOKEN=$(curl -X POST "http://localhost:9000/api/user_tokens/generate" -u "admin:HelloSonarqube9#" -H "Content-Type:application/x-www-form-urlencoded" -d "name=RedCoffeeToken" | jq -r ".token")
          echo "SONARQUBE_TOKEN=$SONARQUBE_TOKEN" >> $GITHUB_ENV
      shell: bash
    - name: Sleep for 30 seconds
      run: sleep 30
      shell: bash
    - name: Run the Sonar Scanner CLI
      run: |
          docker run --rm \
            -e SONAR_HOST_URL="http://redcoffee-sonarqube:9000" \
            -e SONAR_TOKEN=${{ env.SONARQUBE_TOKEN }} \
            --network=redcoffee-network \
            -v "$(pwd):/usr/src" sonarsource/sonar-scanner-cli \
            -Dsonar.projectKey=${{ github.event.repository.name }} \
            -Dsonar.sources=.
      shell: bash
    - name: Install RedCoffee
      run: pip install redcoffee==2.11
      shell: bash
    - name: Generate the PDF Report
      run: redcoffee generatepdf --host="localhost:9000" --project=${{ github.event.repository.name }} --path=report.pdf --token=${{ env.SONARQUBE_TOKEN }}
      shell: bash
    - name: Upload PDF Report as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: sonarqube-report
        path: report.pdf
